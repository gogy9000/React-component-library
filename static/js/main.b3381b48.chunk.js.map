{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h1/AlternativeMessage.module.css","p2-homeworks/h5-rrd-v6/pages/Header.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h12/HW12.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5-rrd-v6/pages/PreJunior.tsx","p2-homeworks/h5-rrd-v6/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/AlternativeClock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h10/HW10.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h12/bll/themeReducer.ts","p2-homeworks/h12/HW12.tsx","p2-homeworks/h5-rrd-v6/Pages.tsx","p2-homeworks/h5-rrd-v6/Header.tsx","p2-homeworks/h5-rrd-v6/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-homeworks/h10/bll/store.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","avatar","img","src","alt","messageBlock","nickName","name","quickMessageBlock","quickMessage","date","time","AlternativeMessage","messageData","HW1","hw","Affair","affairBlock","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","key","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInputDefault","superInputDefault","e","currentTarget","value","SuperButton","red","finalClassName","default","Greeting","setNameCallback","addUser","totalUsers","users","refreshValueCallBack","valueMessage","console","log","notError","disabled","GreetingContainer","addUserCallback","setErrorCallBack","setName","setTotalUsers","target","test","every","item","trim","v1","length","HW3","setUsers","setError","user","alert","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","SuperSelect","options","onChangeOption","mappedOptions","index","SuperRadio","onChangeCallback","o","i","String","arr","HW7","homeWorkReducer","action","sort","a","b","payload","age","Number","initialPeople","HW8","people","setPeople","finalPeople","p","sortUpAndDown","vector","AlternativePeople","setArr","useEffect","arrAge","check18","checkAge","Clock","getTime","hours","Date","getHours","minutes","getMinutes","seconds","getSeconds","timerId","setTimerId","setDate","show","setShow","setTime","stop","clearInterval","stringTime","stringDate","toLocaleDateString","onMouseEnter","onMouseLeave","onMouseDown","id","window","setInterval","AlternativeClock","checkPoints","setCheckPoints","milliseconds","setMilliseconds","setSeconds","setMinutes","setHours","stringCheckpoints","checkPoint","HW9","initState","loading","actions","isLoading","HW10","useSelector","store","dispatch","useDispatch","setTimeout","SuperRange","onChangeRange","finalRangeClassName","range","SuperDoubleRange","min","max","setValue1","setValue2","style","width","margin","handleStyle","backgroundColor","height","opacity","border","marginTop","boxShadow","trackStyle","railStyle","val","HW11","Types","value1","value2","display","justifyContent","alignItems","padding","themes","theme","themeText","newTheme","ChangeTheme","newThemeText","ChangeThemeText","HW12","themeReducer","gap","flexDirection","justifySelf","PATH","Pages","path","element","to","Junior","JuniorPlus","Header","activeMenu","setActiveMenu","Active","menu","button","OnMouseMoveTag","isOnMouse","setIsOnMouse","onMouseHandler","mouseUp","mouseMove","HW5","App","Boolean","location","hostname","match","reducers","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b3381b48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hw\":\"Message_hw__1oMYn\",\"message\":\"Message_message__2n81B\",\"avatar\":\"Message_avatar__32c47\",\"img\":\"Message_img__2EU3i\",\"messageBlock\":\"Message_messageBlock__2jWME\",\"nickName\":\"Message_nickName__2GCa_\",\"quickMessageBlock\":\"Message_quickMessageBlock__NpdJX\",\"quickMessage\":\"Message_quickMessage__1JoYa\",\"date\":\"Message_date__oEDF3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hw\":\"AlternativeMessage_hw__2XjR1\",\"message\":\"AlternativeMessage_message__Rdwu0\",\"avatar\":\"AlternativeMessage_avatar__3f4q-\",\"img\":\"AlternativeMessage_img__3aX_o\",\"messageBlock\":\"AlternativeMessage_messageBlock__2JMOD\",\"nickName\":\"AlternativeMessage_nickName__8pNvC\",\"quickMessageBlock\":\"AlternativeMessage_quickMessageBlock__1Djgx\",\"quickMessage\":\"AlternativeMessage_quickMessage__1J-Na\",\"date\":\"AlternativeMessage_date__o6way\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__oEjy5\",\"button\":\"Header_button__56sWv\",\"menu\":\"Header_menu__32fjA\",\"Active\":\"Header_Active__1ui1F\",\"mouseUp\":\"Header_mouseUp__Gfd0N\",\"mouseMove\":\"Header_mouseMove__1GBBl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInputDefault\":\"SuperInputText_superInputDefault__3LS82\",\"errorInputDefault\":\"SuperInputText_errorInputDefault__3GAQy\",\"error\":\"SuperInputText_error__32Sft\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__Gn6aT\",\"column\":\"HW4_column__hWTTn\",\"testSpanError\":\"HW4_testSpanError__2oif6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__1HfaO\",\"affair\":\"Affairs_affair___LH-a\",\"affairBlock\":\"Affairs_affairBlock__32DYx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__27mAE\",\"error\":\"Greeting_error__34kLF\",\"notError\":\"Greeting_notError__1B1Fb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__lzAJy\",\"red\":\"SuperButton_red__18y4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3_fyd\",\"spanClassName\":\"SuperCheckbox_spanClassName__1oHxw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"HW12_dark__2bIVD\",\"dark-text\":\"HW12_dark-text__32Q-v\",\"red\":\"HW12_red__3SFHm\",\"red-text\":\"HW12_red-text__ADJHk\",\"some\":\"HW12_some__OlyCK\",\"some-text\":\"HW12_some-text__t_I4N\",\"primary\":\"HW12_primary__m6Wp_\",\"primary-text\":\"HW12_primary-text__2h-JN\",\"secondary\":\"HW12_secondary__eeBKq\",\"secondary-text\":\"HW12_secondary-text__GSd10\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__rUvol\",\"hw\":\"App_hw__Rlgac\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__3ZR65\"};","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\ntype MessagePropsTypes = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nconst Message: React.FC<MessagePropsTypes> = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.avatar}>\r\n                <img className={s.img} src={props.avatar} alt=\"ava\"/>\r\n\r\n            </div>\r\n            <div className={s.messageBlock}>\r\n                <div className={s.nickName}>{props.name} :</div>\r\n                <div className={s.quickMessageBlock}>\r\n                    <div className={s.quickMessage}>{props.message}</div>\r\n                    <div className={s.date}>{props.time}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport s from \"./AlternativeMessage.module.css\";\r\n\r\ntype MessagePropsTypes = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nconst AlternativeMessage: React.FC<MessagePropsTypes>=(props)=> {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.avatar}>\r\n                <img className={s.img} src={props.avatar} alt=\"ava\"/>\r\n\r\n            </div>\r\n            <div className={s.messageBlock}>\r\n                <div className={s.nickName}>{props.name} :</div>\r\n                <div className={s.quickMessageBlock}>\r\n                    <div className={s.quickMessage}>{props.message}</div>\r\n                    <div className={s.date}>{props.time}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlternativeMessage\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\nimport s from './Message.module.css'\r\nimport AlternativeMessage from \"./AlternativeMessage\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Ханака',\r\n    message: 'Дратути))',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div className={s.hw}>\r\n            <hr />\r\n            {/*homeworks 1*/}\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativeMessage\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}/>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать (ок не буду!)\r\n    affair: AffairType // need to fix any!!!(fixed!)\r\n    deleteAffairCallback: (_id:number)=>void // need to fix any!!!(fixed!)\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix(fixed!)\r\n\r\n    return (\r\n        <div className={s.affairBlock} >\r\n            <span className={s.affair}>{props.affair.name}</span>\r\n\r\n\r\n            <button onClick={deleteCallback}>delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType} from './HW2'\r\n\r\ntype AffairsPropsType = {\r\n    data: Array<AffairType>\r\n\r\n    setFilter:(filter:string)=>void\r\n    deleteAffairCallback: (_id:number)=>void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n\r\n    const mappedAffairs = props.data.map((affair: AffairType) => (\r\n\r\n        <Affair\r\n            key={affair._id}\r\n            affair={affair}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n\r\n    const setAll = () => {props.setFilter('All')}\r\n    const setHigh = () => {props.setFilter('High')}\r\n    const setMiddle = () => {props.setFilter('Middle')}\r\n    const setLow = () => {props.setFilter('Low')}\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n\r\n\r\n// types\r\nexport type AffairPriorityType = 'High' | 'Low' | 'Middle'\r\nexport type AffairType = { _id: number, name: string, priority: string }\r\nexport type FilterType = 'All' | AffairPriorityType\r\n\r\n// constants\r\n\r\n\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: 'React', priority: 'High'},\r\n    {_id: 2, name: 'anime', priority: 'Low'},\r\n    {_id: 3, name: 'games', priority: 'Low'},\r\n    {_id: 4, name: 'work', priority: 'High'},\r\n    {_id: 5, name: 'html & css', priority: 'Middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType) => {\r\n    if (filter === 'All') return affairs\r\n\r\n    else return (affairs.filter((affair:AffairType)=>affair.priority===filter))\r\n}\r\n// эта функция фильтрует состояние(если фильтр находится в положении \"All\" то возвращает не филтрованый обЪект affairs,\r\n// иначе фильтрует методом и возвращает те объекты в массиве у которых свойство priority строго равно значению в хуке filter\r\n\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number) => {\r\n\r\n    return (affairs.filter((affair: AffairType) => affair._id != _id))\r\n}\r\n// функция с помощью метода filter(не путать с хуком котрый ниже написан) возвращает только те объекты в массиве\r\n// defaultAffairs,\r\n// которые не равны значению _id  которое передается в функцию в качестве аргумена при вызове этой функции в\r\n// deleteAffairCallback\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs)\r\n    // это хук в котором сидит defaultAffairs изначально и при нажатии на кнопку delete выкидывает один из обЪектов,\r\n    // который в нем находится\r\n    const [filter, setFilter] = useState<any>('All')\r\n    //этот хук держит в себе значение по которому филЬтруется defaultAffairs\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    //переменная с отфильтрованным массивом defaultAffairs в качестве значения\r\n    // filterAffairs фильтруется по массиву который сидит в Хуке affairs,\r\n    // а не тот котрый в самом верху написан, то есть после удаления какого либо обЪекта массив в хуке affairs\r\n    // будет фильтроваться с учетом того что из него обьекты могут быть удалены посредством функции deleteAffair\r\n\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n    // вот здесь вызывается deleteAffair и вернувшееся значение сразу же залетает в хук setAffairs\r\n    // deleteAffairCallback это колбек который вызывается в компоненте Affair(не путать с Affairs ) и при вызове в\r\n    // качестве аргумента указывается _id того обЪекта который нужно удалить\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n}\r\n\r\nexport const SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = error?`${s.error} ${spanClassName ? spanClassName : ''}`:''\r\n\r\n    const finalInputClassName = error?`${error?error:s.errorInputDefault}`:`${className?className:s.superInputDefault}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport s from './Greeting.module.css'\r\nimport {UserType} from \"./HW3\";\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: any) => void\r\n    addUser: (e: any) => void\r\n    error: boolean\r\n    totalUsers: number\r\n    users: Array<UserType>\r\n    refreshValueCallBack: () => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, users, refreshValueCallBack}\r\n) => {\r\n\r\n    let valueMessage = !error ? name : 'error'\r\n    //если значение ранее не вводилось то держит значение в состоянии ввода\r\n    //если значение ранее вводилось то выводит предупреждение прямо в инпут\r\n\r\n    let refresh = () => refreshValueCallBack()\r\n    //вызывает колобек который обнуляет инпут при клике на инпут после вывода предупреждения\r\n    console.log(users)\r\n    return (\r\n        <div>\r\n\r\n            {/*<input value={valueMessage} onChange={setNameCallback} onClick={refresh}*/}\r\n            {/*       className={!error ? s.notError : s.error}/>*/}\r\n            <SuperInputText value={valueMessage} onChange={setNameCallback} onClick={refresh}\r\n                            className={error ? s.error : s.notError}/>\r\n\r\n\r\n            <SuperButton onClick={addUser} red={error} disabled={error}>add</SuperButton>\r\n            <span>{totalUsers}</span>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n\r\n\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\nimport {v1} from \"uuid\";\r\n\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (user: UserType) => void\r\n    error: boolean\r\n    refreshValueCallBack: () => void\r\n    setErrorCallBack: () => void\r\n}\r\n\r\n\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({\r\n                                                                     users,\r\n                                                                     addUserCallback,\r\n                                                                     error,\r\n                                                                     refreshValueCallBack,\r\n                                                                     setErrorCallBack\r\n                                                                 }) => {\r\n\r\n    const [name, setName] = useState<string>('')\r\n    //стейт со значением из инпута\r\n\r\n    let [totalUsers, setTotalUsers] = useState<number>(0)\r\n    //счетчик срабатывает при нажатии кнопки \"add\"\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => setName(e.target.value)\r\n    // берет значение из инпута и присваевает его в setState\r\n\r\n    const addUser = () => {\r\n        let regExp = (/^\\s+$/).test(name)\r\n        //регулярка ищет совпадения, если от начала до конца одни тодько\r\n        // пробелы, то возвращает true\r\n        if (regExp || !name || !users.every((item: UserType) => item.name !== name)) {\r\n            //если регулярка тру или не name тру или  в массиве уже есть обЪекты с\r\n            // такими же значениями в свойстве name, то состояние error тру и name\r\n            // пустая строка\r\n            setErrorCallBack()\r\n            return setName('')\r\n        }\r\n        addUserCallback({name: name.trim(), _id: v1()})\r\n        //трим обрезает пробелы в начале и в конце\r\n        setName('')\r\n        setTotalUsers(totalUsers = users.length)\r\n    }\r\n    // при нажатии на кнопку, вызывает addUserCallback и отдает ему обЪект user в качестве аргумента,\r\n    //потом обнуляет значение в setName\r\n    //потом тикает счетчик setTotalUsers\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            users={users}\r\n            refreshValueCallBack={refreshValueCallBack}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\n\r\n// Я как обычно до конца не понял что требовалось, по этому теперь эта компонента  копит в стейте введеные значения\r\n// в виде {_id:number, name:string} и не копит если значение в инпуте вводилось ранее, при этом меняет\r\n// значение error=на true, от которого в свою очередь зависит цвет рамки в инпуте\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([{_id: 'null', name: 'null'}])\r\n    // сверху основной стейт с массивом значений из инпута и _id в виде обЪектов\r\n    const [error, setError] = useState<boolean>(false)\r\n    // булевый переключатель стилей рамки  s.error|s.notError\r\n\r\n\r\n    const addUserCallback = (user: UserType) => {\r\n        alert('Hello '+user.name)\r\n        setUsers([...users, user])\r\n\r\n\r\n    }\r\n    // функция проверяет введеное значение с со значениями которые вводились ранее\r\n    // метод every пробегается по массиву и если совпадет хотя бы одно из ранее вводимых значений с введеным\r\n    // только что значением переключает error на true,\r\n    // если значение  ранее не было введено то пушит обЪект user в основной стейт\r\n\r\n    const refreshValueCallBack = () => {\r\n        setError(false)\r\n    }\r\n    //переключает обратно error на false при клике по инпуту\r\n\r\n    const setErrorCallback = () => {\r\n        setError(true)\r\n    }\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users}\r\n                               addUserCallback={addUserCallback}\r\n                               error={error}\r\n                               refreshValueCallBack={refreshValueCallBack}\r\n                               setErrorCallBack={setErrorCallback}/>\r\n\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked&&onChangeChecked(e.currentTarget.checked)\r\n        onChange&&onChange(e)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n\r\n                    className={s.blue}\r\n                    error={error}\r\n                    // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red// пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\n\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false)\r\n        // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false)\r\n        // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true)\r\n        // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n\r\n        setValue(restoreState('editable-span-value','storage is empty'))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const mappedOptions: JSX.Element[] | undefined = options ? options.map((item: string, index: number) =>\r\n        <option key={item+'-'+index} value={item}\r\n        >{item}</option>) : [];\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select value={value} name={'select'} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: string|number) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n         onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions: JSX.Element[] = options ? options.map((o:string|number, i) => {\r\n\r\n        return (\r\n\r\n            <label key={name + '-' + i}>\r\n                <input\r\n                    type={'radio'}\r\n                    name={name}\r\n                    checked={String(o) === value}\r\n                    value={o}\r\n                    onChange={onChangeCallback}\r\n                    {...restProps}\r\n                />\r\n                {o}\r\n            </label>\r\n        )\r\n    }) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z',2] as Array<string>\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState<string|number>(arr[0])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import {UserType} from \"../HW8\";\r\n\r\nexport type ActionsType = {\r\n    type: string\r\n    payload: string|number\r\n}\r\n\r\n\r\n\r\nexport const homeWorkReducer = (state: Array<UserType>, action: ActionsType):Array<UserType> => {\r\n    switch (action.type) {\r\n        case 'sort':\r\n\r\n            return [...state.sort((a, b) =>\r\n                action.payload === 'up' ?\r\n                    a.age - b.age\r\n                    : action.payload === 'down' ?\r\n                        b.age - a.age\r\n                        : 0)]\r\n\r\n        case 'check':\r\n\r\n            return state.filter((item)=>action.payload!=='all'?item.age===Number(action.payload):true)\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {Dispatch, SetStateAction, useEffect, useState} from 'react'\r\nimport {ActionsType, homeWorkReducer} from './bll/homeWorkReducer'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport SuperRadio from \"../h7/common/c6-SuperRadio/SuperRadio\";\r\n\r\nexport type UserType ={\r\n    _id: number\r\n    name:string\r\n    age:number\r\n}\r\n\r\n\r\nconst initialPeople:Array<UserType> = [\r\n    {_id: 0, name: 'Кот', age: 3},\r\n    {_id: 1, name: 'Александр', age: 66},\r\n    {_id: 2, name: 'Коля', age: 16},\r\n    {_id: 3, name: 'Виктор', age: 44},\r\n    {_id: 4, name: 'Дмитрий', age: 40},\r\n    {_id: 5, name: 'Ирина', age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState<Array<UserType>>(initialPeople) // need to fix any\r\n\r\n    // need to fix any\r\n    const finalPeople = people.map((p: UserType) => (\r\n        <div key={p._id}>\r\n          <span>{p.name+' '+p.age}</span>\r\n        </div>\r\n    ))\r\n\r\n    const sortUpAndDown = (vector:'up'|'down') => {\r\n        setPeople(homeWorkReducer(people, {type: 'sort', payload: vector}))\r\n    }\r\n\r\n    const check18 = (checkAge:number) => {\r\n      setPeople(homeWorkReducer(initialPeople,{type: 'check', payload: checkAge}))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {finalPeople}\r\n\r\n            <div><SuperButton onClick={()=>{sortUpAndDown('up')}}>sort up</SuperButton></div>\r\n            <div><SuperButton onClick={()=>{sortUpAndDown('down')}}>sort down</SuperButton></div>\r\n           <div><SuperButton onClick={()=>{check18(16)}}>check 16</SuperButton></div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativePeople people={people} setPeople={setPeople} finalPeople={finalPeople}/>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW8\r\n\r\ntype AlternativePeopleType={\r\n    people:Array<UserType>\r\n    setPeople: Dispatch<SetStateAction<UserType[]>>\r\n    finalPeople:Array<JSX.Element>\r\n}\r\nconst AlternativePeople:React.FC<AlternativePeopleType> = ({people, setPeople , finalPeople}) => {\r\n\r\n    const [arr, setArr] = useState<Array<string>>([])\r\n    const [value, onChangeOption] = useState<string|number>(arr[0])\r\n\r\n    useEffect(()=> {\r\n        let arrAge = people.map(item => String(item.age))\r\n        setArr([...arrAge])\r\n    },[])\r\n\r\n\r\n\r\n    const check18 = (checkAge:string|number) => {\r\n        onChangeOption(checkAge)\r\n        setPeople(homeWorkReducer(initialPeople,{type: 'check', payload: checkAge}))\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n            <div><SuperRadio name={'radio1'}\r\n                             options={arr}\r\n                             value={value}\r\n                             onChangeOption={check18}/></div>\r\n            <SuperButton onClick={()=>{check18('all')}}>get all</SuperButton>\r\n        </div>\r\n\r\n            )\r\n}","import React, {useState} from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\n\r\n\r\nfunction Clock() {\r\n\r\n    const getTime = () => {\r\n        let hours = new Date().getHours()\r\n        let minutes = new Date().getMinutes()\r\n        let seconds = new Date().getSeconds()\r\n        return `${hours < 10 ? 0 : ''}${hours}:${minutes < 10 ? 0 : ''}${minutes}:${seconds < 10 ? 0 : ''}${seconds}`\r\n    }\r\n\r\n    const [timerId, setTimerId] = useState<number>(0)\r\n    const [date, setDate] = useState<Date>(new Date)\r\n    const [show, setShow] = useState<boolean>(false)\r\n    const [time, setTime] = useState<string>(getTime)\r\n\r\n    const start = () => {\r\n        stop()\r\n        let id: number = window.setInterval(() => {\r\n            setTime(getTime())\r\n            setDate(new Date())\r\n        }, 1000)\r\n        setTimerId(id)\r\n    }\r\n\r\n    const stop = () => {\r\n        clearInterval(timerId)\r\n    }\r\n\r\n    const onMouseEnter = () => {\r\n        setShow(true)\r\n    }\r\n    const onMouseLeave = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    const stringTime = time\r\n\r\n    const stringDate = date.toLocaleDateString() || <br/>\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n            >\r\n                {stringTime}\r\n            </div>\r\n\r\n            {show && (\r\n                <div>\r\n                    {stringDate}\r\n                </div>\r\n            )}\r\n\r\n            <SuperButton onMouseDown={start}>start</SuperButton>\r\n            <SuperButton onClick={stop}>stop</SuperButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock\r\n","import React, {useState} from 'react'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {v1} from \"uuid\";\r\n\r\nexport const AlternativeClock = () => {\r\n\r\n    const [id, setTimerId] = useState<number>(0)\r\n    const [checkPoints, setCheckPoints] = useState<Array<string>>([])\r\n\r\n    let [milliseconds, setMilliseconds] = useState<number>(0)\r\n    let [seconds, setSeconds] = useState<number>(0)\r\n    let [minutes, setMinutes] = useState<number>(0)\r\n    let [hours, setHours] = useState<number>(0)\r\n\r\n    const getTime = () => {\r\n        setHours(hours === 23 && minutes === 59 && seconds === 59 ? hours = 0 : minutes === 59 && seconds === 59 && milliseconds === 99 ? hours = hours + 1 : hours)\r\n        setMinutes(minutes === 59 && seconds === 59 ? minutes = 0 : seconds === 59 && milliseconds === 99 ? minutes = minutes + 1 : minutes)\r\n        setSeconds(seconds === 59 && milliseconds === 99 ? seconds = 0 : milliseconds === 99 ? seconds = seconds + 1 : seconds)\r\n        setMilliseconds(milliseconds === 99 ? milliseconds = 0 : milliseconds = milliseconds + 1)\r\n    }\r\n\r\n    const start = () => {\r\n        stop()\r\n        let id: number = window.setInterval(() => {\r\n            getTime()\r\n        }, 10)\r\n        setTimerId(id)\r\n    }\r\n\r\n    const stop = () => {\r\n        clearInterval(id)\r\n    }\r\n\r\n    const reset = () => {\r\n        clearInterval(id)\r\n        setMilliseconds(0)\r\n        setSeconds(0)\r\n        setMinutes(0)\r\n        setHours(0)\r\n    }\r\n\r\n    const onCheckpoint = () => {\r\n        setCheckPoints([stringTime, ...checkPoints])\r\n    }\r\n    const clearCheckpoints = () => {\r\n        setCheckPoints([])\r\n    }\r\n\r\n    const stringTime = `${hours < 10 ? 0 : ''}${hours}:${minutes < 10 ? 0 : ''}${minutes}:${seconds < 10 ? 0 : ''}${seconds}:${milliseconds < 10 ? 0 : ''}${milliseconds}`\r\n\r\n    const stringCheckpoints = checkPoints?.map((checkPoint: string) => <div key={v1()}>{checkPoint}</div>)\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {stringTime}\r\n            </div>\r\n\r\n            <SuperButton onMouseDown={start}>start</SuperButton>\r\n            <SuperButton onClick={stop}>stop</SuperButton>\r\n            <SuperButton onClick={onCheckpoint}>check</SuperButton>\r\n            <SuperButton onClick={clearCheckpoints}>clear</SuperButton>\r\n            <SuperButton onClick={reset}>reset</SuperButton>\r\n\r\n            <div>\r\n                {stringCheckpoints}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Clock from './Clock'\r\nimport {AlternativeClock} from \"./AlternativeClock\";\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 9\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Clock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativeClock/>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW9\r\n","import {InferActionsTypes} from \"./store\";\r\n\r\nconst initState = {\r\nloading: false\r\n}\r\n\r\ntype initStateType=typeof initState\r\ntype ActionsType= InferActionsTypes<typeof actions>\r\n\r\n // type InferActionsTypes <T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n\r\nexport const loadingReducer = (state:initStateType = initState, action: ActionsType): initStateType => { // fix any\r\n    switch (action.type) {\r\n        case 'TOGGLE-LOADING': {\r\n            return {...state, loading: action.isLoading}\r\n        }\r\n        default: return state\r\n    }\r\n}\r\nexport const actions={\r\n    loadingAC : (isLoading:boolean) => ({type: 'TOGGLE-LOADING', isLoading} as const)\r\n}\r\n\r\nexport const startDownloadTC = () => (dispatch:(ac:ActionsType)=>void)=>{\r\n    dispatch(actions.loadingAC(true))\r\n    console.log('loading...')\r\n    setTimeout(()=>{\r\n        dispatch(actions.loadingAC(false))\r\n    },2000)\r\n}\r\n  \r\n\r\n","import React from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"./bll/store\";\r\nimport {startDownloadTC} from \"./bll/loadingReducer\";\r\n\r\nfunction HW10() {\r\n    const loading = useSelector((store:AppStoreType) => store.loading.loading)\r\n    const dispatch = useDispatch()\r\n\r\n    const setLoading = () => {\r\n        // @ts-ignore  //по какой-то причине ругается на типизацию dispatch\r\n        dispatch(startDownloadTC())\r\n    };\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 10\r\n\r\n            {/*should work (должно работать)*/}\r\n            {loading\r\n                ? (\r\n                    <div>крутилка...</div>\r\n                ) : (\r\n                    <div>\r\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<Alternative/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW10\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperRange.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,value,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n                value={value}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRange\r\n","import React from 'react'\r\nimport Slider from \"rc-slider\";\r\nimport 'rc-slider/assets/index.css';\r\n\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    setValue1: React.Dispatch<React.SetStateAction<number>>\r\n    setValue2: React.Dispatch<React.SetStateAction<number>>\r\n    value?: number[]\r\n    min?: number\r\n    max?: number\r\n    step?: number\r\n    disable?: boolean\r\n}\r\n\r\nexport const SuperDoubleRange = (props: SuperDoubleRangePropsType) => {\r\n    let {value, min, max, setValue1, setValue2} = props\r\n\r\n    const onChangeCallback = (val: any) => {\r\n\r\n        setValue1(val[0] as number)\r\n        setValue2(val[1] as number)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div style={{width: 130, margin: 10}}>\r\n\r\n            <Slider range\r\n                    handleStyle={{\r\n                        backgroundColor: \"rgb(0 117 255)\", height: 14, opacity: 1,\r\n                        border: \"none\", marginTop: -3, boxShadow: \"none\"\r\n                    }}\r\n                    trackStyle={{border: \"1px solid rgb(59 117 186)\", backgroundColor: \"rgb(0 117 255)\", height: 8}}\r\n                    railStyle={{border: \"1px solid darkGray\", height: 8}}\r\n                    onChange={onChangeCallback}\r\n                    value={value}\r\n                    min={min}\r\n                    max={max}/>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport SuperRange from './common/c7-SuperRange/SuperRange'\r\nimport {SuperDoubleRange} from './common/c8-SuperDoubleRange/SuperDoubleRange'\r\n\r\n\r\nfunction HW11() {\r\n    const [value1, setValue1] = useState(35)\r\n    const [value2, setValue2] = useState(75)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 11\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <span>{value1}</span>\r\n                <SuperRange\r\n                    onChangeRange={setValue1}\r\n                    value={value1}\r\n                    // сделать так чтоб value1 изменялось\r\n                />\r\n            </div>\r\n\r\n            <div style={{display:\"flex\",justifyContent:'center',alignItems:\"center\", padding:5}}>\r\n                <span>{value1}</span>\r\n                <SuperDoubleRange\r\n                    value={[value1, value2]}\r\n                    setValue1={setValue1}\r\n                    setValue2={setValue2}\r\n                />\r\n                <span>{value2}</span>\r\n            </div>\r\n\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperRange/>*/}\r\n            {/*<AlternativeSuperDoubleRange/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW11\r\n\r\n","import {InferActionsTypes} from \"../../h10/bll/store\";\r\n\r\nenum Types {\r\n    ChangeTheme='CHANGE-THEME',\r\n    ChangeThemeText='CHANGE-THEME-TEXT'\r\n}\r\n\r\nconst initState = {\r\n    themes :['dark', 'red', 'some','primary','secondary'],\r\n    theme:'some',\r\n    themeText:'some'\r\n};\r\n\r\ntype initStateType=typeof initState\r\ntype ActionsType= InferActionsTypes<typeof actions>\r\nexport const themeReducer = (state: initStateType = initState , action: ActionsType): initStateType => { // fix any\r\n    switch (action.type) {\r\n        case Types.ChangeTheme:\r\n            return {...state, theme: action.newTheme};\r\n        case Types.ChangeThemeText:\r\n            return {...state, themeText: action.newThemeText}\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const actions= {\r\n    changeThemeC : (newTheme: string) => ({type: Types.ChangeTheme, newTheme}as const),\r\n    changeThemeTextC : (newThemeText: string) => ({type: Types.ChangeThemeText, newThemeText}as const),\r\n\r\n}","import React from \"react\";\r\nimport s from \"./HW12.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../h10/bll/store\";\r\nimport {actions} from \"./bll/themeReducer\";\r\nimport SuperSelect from \"../h7/common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../h7/common/c6-SuperRadio/SuperRadio\";\r\n\r\n\r\nfunction HW12() {\r\n    const state = useSelector((state: AppStoreType) => state.themeReducer)\r\n    const {theme, themes, themeText} = state\r\n    const dispatch = useDispatch()\r\n\r\n    const changeTheme = (newTheme: string) => {\r\n        dispatch(actions.changeThemeC(newTheme))\r\n    }\r\n    const changeThemeText = (newThemeText: string) => {\r\n        dispatch(actions.changeThemeTextC(newThemeText))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s[theme]} style={{display: 'flex', gap:10,\r\n            flexDirection: 'column', justifyContent: 'center'}}>\r\n            <hr/>\r\n            <span className={s[themeText + '-text']}>\r\n                homeworks 12\r\n            </span>\r\n            <div>\r\n                <SuperSelect options={themes}\r\n                             value={theme}\r\n                             onChangeOption={changeTheme}\r\n                             style={{width: 100, justifySelf: 'center'}}/>\r\n            </div>\r\n            <div>\r\n                <SuperRadio name={'themes'}\r\n                            options={themes}\r\n                            value={themeText}\r\n                            onChange={(e)=>{\r\n                                changeThemeText(e.currentTarget.value)}}/>\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW12;\r\n","import React from 'react'\r\n\r\nimport {Routes, Route, Navigate} from 'react-router-dom'\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport HW7 from \"../h7/HW7\";\r\nimport HW8 from \"../h8/HW8\";\r\nimport HW9 from \"../h9/HW9\";\r\nimport HW10 from \"../h10/HW10\";\r\nimport HW11 from \"../h11/HW11\";\r\nimport HW12 from \"../h12/HW12\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PlUS: '/junior-plus'\r\n\r\n    // add paths\r\n}\r\n\r\nfunction Pages() {\r\n    return (\r\n        <div>\r\n            {/*Routes выбирает первый подходящий роут*/}\r\n\r\n            <Routes>\r\n\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PlUS} element={<JuniorPlus/>}/>\r\n\r\n                // add routes\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route path={'/*'} element={<Error404/>}/>\r\n\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pages\r\n\r\nexport const Junior = () => {\r\n\r\n    return (\r\n        <>\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n            <HW10/>\r\n            <HW11/>\r\n            <HW12/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const JuniorPlus = () => {\r\n    return <>JuniorPlus</>\r\n\r\n\r\n}\r\n","import React, {useState} from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"./Pages\";\r\nimport style from './pages/Header.module.css'\r\n\r\nfunction Header() {\r\n    const [activeMenu, setActiveMenu] = useState<boolean>(false)\r\n\r\n   const setActive= () => {\r\n\r\n        activeMenu ?\r\n            setActiveMenu(false)\r\n            : setActiveMenu(true)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={style.Header}>\r\n\r\n            <div\r\n                className={!activeMenu ? style.menu : style.Active }>\r\n\r\n                <OnMouseMoveTag>\r\n                    <NavLink to={PATH.PRE_JUNIOR}> pre-junior</NavLink>\r\n                </OnMouseMoveTag>\r\n\r\n                <OnMouseMoveTag>\r\n                    <NavLink to={PATH.JUNIOR}> junior</NavLink>\r\n                </OnMouseMoveTag>\r\n\r\n                <OnMouseMoveTag>\r\n                    <NavLink to={PATH.JUNIOR_PlUS}> junior+plus</NavLink>\r\n                </OnMouseMoveTag>\r\n\r\n\r\n\r\n            </div>\r\n            <span className={style.button}>\r\n                <button onClick={setActive}>Menu</button>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\nexport const OnMouseMoveTag =  (props:any)=>{\r\n\r\n    const [isOnMouse,setIsOnMouse]=useState(false)\r\n\r\n    const onMouseHandler = () => setIsOnMouse(isOnMouse?false:true)\r\n\r\n    return(\r\n        <span onMouseEnter={onMouseHandler}\r\n              onMouseLeave={onMouseHandler}\r\n        className={isOnMouse?style.mouseUp:style.mouseMove}>{props.children}</span>\r\n\r\n    )\r\n}","import React from 'react'\r\nimport Header from './Header'\r\nimport Pages from './Pages'\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n           <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Pages/>\r\n\r\n           </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5-rrd-v6/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import {loadingReducer} from './loadingReducer'\r\nimport {applyMiddleware, combineReducers, legacy_createStore as createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {themeReducer} from \"../../h12/bll/themeReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    loading: loadingReducer,\r\n    themeReducer,\r\n\r\n})\r\n\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk))\r\nexport default store\r\n\r\nexport type InferActionsTypes <T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store // for dev\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./p2-homeworks/h10/bll/store\";\r\n\r\n// igg2\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n        <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}