{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h1/AlternativeMessage.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","avatar","img","src","alt","messageBlock","nickName","name","quickMessageBlock","quickMessage","date","time","AlternativeMessage","messageData","HW1","hw","Affair","affairBlock","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","key","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInputDefault","superInputDefault","e","currentTarget","value","SuperButton","red","finalClassName","default","Greeting","setNameCallback","addUser","totalUsers","users","refreshValueCallBack","valueMessage","console","log","notError","disabled","GreetingContainer","addUserCallback","setErrorCallBack","setName","setTotalUsers","target","test","every","item","trim","v1","length","HW3","setUsers","setError","user","alert","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.66c99820.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hw\":\"Message_hw__1oMYn\",\"message\":\"Message_message__2n81B\",\"avatar\":\"Message_avatar__32c47\",\"img\":\"Message_img__2EU3i\",\"messageBlock\":\"Message_messageBlock__2jWME\",\"nickName\":\"Message_nickName__2GCa_\",\"quickMessageBlock\":\"Message_quickMessageBlock__NpdJX\",\"quickMessage\":\"Message_quickMessage__1JoYa\",\"date\":\"Message_date__oEDF3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hw\":\"AlternativeMessage_hw__2XjR1\",\"message\":\"AlternativeMessage_message__Rdwu0\",\"avatar\":\"AlternativeMessage_avatar__3f4q-\",\"img\":\"AlternativeMessage_img__3aX_o\",\"messageBlock\":\"AlternativeMessage_messageBlock__2JMOD\",\"nickName\":\"AlternativeMessage_nickName__8pNvC\",\"quickMessageBlock\":\"AlternativeMessage_quickMessageBlock__1Djgx\",\"quickMessage\":\"AlternativeMessage_quickMessage__1J-Na\",\"date\":\"AlternativeMessage_date__o6way\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInputDefault\":\"SuperInputText_superInputDefault__3LS82\",\"errorInputDefault\":\"SuperInputText_errorInputDefault__3GAQy\",\"error\":\"SuperInputText_error__32Sft\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__Gn6aT\",\"column\":\"HW4_column__hWTTn\",\"testSpanError\":\"HW4_testSpanError__2oif6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__1HfaO\",\"affair\":\"Affairs_affair___LH-a\",\"affairBlock\":\"Affairs_affairBlock__32DYx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__27mAE\",\"error\":\"Greeting_error__34kLF\",\"notError\":\"Greeting_notError__1B1Fb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__lzAJy\",\"red\":\"SuperButton_red__18y4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3_fyd\",\"spanClassName\":\"SuperCheckbox_spanClassName__1oHxw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__rUvol\",\"hw\":\"App_hw__Rlgac\"};","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\ntype MessagePropsTypes = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nconst Message: React.FC<MessagePropsTypes> = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.avatar}>\r\n                <img className={s.img} src={props.avatar} alt=\"ava\"/>\r\n\r\n            </div>\r\n            <div className={s.messageBlock}>\r\n                <div className={s.nickName}>{props.name} :</div>\r\n                <div className={s.quickMessageBlock}>\r\n                    <div className={s.quickMessage}>{props.message}</div>\r\n                    <div className={s.date}>{props.time}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport s from \"./AlternativeMessage.module.css\";\r\n\r\ntype MessagePropsTypes = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nconst AlternativeMessage: React.FC<MessagePropsTypes>=(props)=> {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.avatar}>\r\n                <img className={s.img} src={props.avatar} alt=\"ava\"/>\r\n\r\n            </div>\r\n            <div className={s.messageBlock}>\r\n                <div className={s.nickName}>{props.name} :</div>\r\n                <div className={s.quickMessageBlock}>\r\n                    <div className={s.quickMessage}>{props.message}</div>\r\n                    <div className={s.date}>{props.time}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlternativeMessage\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\nimport s from './Message.module.css'\r\nimport AlternativeMessage from \"./AlternativeMessage\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Ханака',\r\n    message: 'Дратути))',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div className={s.hw}>\r\n            <hr />\r\n            {/*homeworks 1*/}\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativeMessage\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}/>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать (ок не буду!)\r\n    affair: AffairType // need to fix any!!!(fixed!)\r\n    deleteAffairCallback: (_id:number)=>void // need to fix any!!!(fixed!)\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix(fixed!)\r\n\r\n    return (\r\n        <div className={s.affairBlock} >\r\n            <span className={s.affair}>{props.affair.name}</span>\r\n\r\n\r\n            <button onClick={deleteCallback}>delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType} from './HW2'\r\n\r\ntype AffairsPropsType = {\r\n    data: Array<AffairType>\r\n\r\n    setFilter:(filter:string)=>void\r\n    deleteAffairCallback: (_id:number)=>void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n\r\n    const mappedAffairs = props.data.map((affair: AffairType) => (\r\n\r\n        <Affair\r\n            key={affair._id}\r\n            affair={affair}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n\r\n    const setAll = () => {props.setFilter('All')}\r\n    const setHigh = () => {props.setFilter('High')}\r\n    const setMiddle = () => {props.setFilter('Middle')}\r\n    const setLow = () => {props.setFilter('Low')}\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n\r\n\r\n// types\r\nexport type AffairPriorityType = 'High' | 'Low' | 'Middle'\r\nexport type AffairType = { _id: number, name: string, priority: string }\r\nexport type FilterType = 'All' | AffairPriorityType\r\n\r\n// constants\r\n\r\n\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: 'React', priority: 'High'},\r\n    {_id: 2, name: 'anime', priority: 'Low'},\r\n    {_id: 3, name: 'games', priority: 'Low'},\r\n    {_id: 4, name: 'work', priority: 'High'},\r\n    {_id: 5, name: 'html & css', priority: 'Middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType) => {\r\n    if (filter === 'All') return affairs\r\n\r\n    else return (affairs.filter((affair:AffairType)=>affair.priority===filter))\r\n}\r\n// эта функция фильтрует состояние(если фильтр находится в положении \"All\" то возвращает не филтрованый обЪект affairs,\r\n// иначе фильтрует методом и возвращает те объекты в массиве у которых свойство priority строго равно значению в хуке filter\r\n\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number) => {\r\n\r\n    return (affairs.filter((affair: AffairType) => affair._id != _id))\r\n}\r\n// функция с помощью метода filter(не путать с хуком котрый ниже написан) возвращает только те объекты в массиве\r\n// defaultAffairs,\r\n// которые не равны значению _id  которое передается в функцию в качестве аргумена при вызове этой функции в\r\n// deleteAffairCallback\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs)\r\n    // это хук в котором сидит defaultAffairs изначально и при нажатии на кнопку delete выкидывает один из обЪектов,\r\n    // который в нем находится\r\n    const [filter, setFilter] = useState<any>('All')\r\n    //этот хук держит в себе значение по которому филЬтруется defaultAffairs\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    //переменная с отфильтрованным массивом defaultAffairs в качестве значения\r\n    // filterAffairs фильтруется по массиву который сидит в Хуке affairs,\r\n    // а не тот котрый в самом верху написан, то есть после удаления какого либо обЪекта массив в хуке affairs\r\n    // будет фильтроваться с учетом того что из него обьекты могут быть удалены посредством функции deleteAffair\r\n\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n    // вот здесь вызывается deleteAffair и вернувшееся значение сразу же залетает в хук setAffairs\r\n    // deleteAffairCallback это колбек который вызывается в компоненте Affair(не путать с Affairs ) и при вызове в\r\n    // качестве аргумента указывается _id того обЪекта который нужно удалить\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\nimport superInputText from \"./SuperInputText\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n}\r\n\r\nexport const SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = error?`${s.error} ${spanClassName ? spanClassName : ''}`:''\r\n\r\n    const finalInputClassName = error?`${error?error:s.errorInputDefault}`:`${className?className:s.superInputDefault}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport s from './Greeting.module.css'\r\nimport {UserType} from \"./HW3\";\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: any) => void\r\n    addUser: (e: any) => void\r\n    error: boolean\r\n    totalUsers: number\r\n    users: Array<UserType>\r\n    refreshValueCallBack: () => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, users, refreshValueCallBack}\r\n) => {\r\n\r\n    let valueMessage = !error ? name : 'error'\r\n    //если значение ранее не вводилось то держит значение в состоянии ввода\r\n    //если значение ранее вводилось то выводит предупреждение прямо в инпут\r\n\r\n    let refresh = () => refreshValueCallBack()\r\n    //вызывает колобек который обнуляет инпут при клике на инпут после вывода предупреждения\r\n    console.log(users)\r\n    return (\r\n        <div>\r\n\r\n            {/*<input value={valueMessage} onChange={setNameCallback} onClick={refresh}*/}\r\n            {/*       className={!error ? s.notError : s.error}/>*/}\r\n            <SuperInputText value={valueMessage} onChange={setNameCallback} onClick={refresh}\r\n                            className={error ? s.error : s.notError}/>\r\n\r\n\r\n            <SuperButton onClick={addUser} red={error} disabled={error}>add</SuperButton>\r\n            <span>{totalUsers}</span>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n\r\n\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\nimport {v1} from \"uuid\";\r\n\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (user: UserType) => void\r\n    error: boolean\r\n    refreshValueCallBack: () => void\r\n    setErrorCallBack: () => void\r\n}\r\n\r\n\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({\r\n                                                                     users,\r\n                                                                     addUserCallback,\r\n                                                                     error,\r\n                                                                     refreshValueCallBack,\r\n                                                                     setErrorCallBack\r\n                                                                 }) => {\r\n\r\n    const [name, setName] = useState<string>('')\r\n    //стейт со значением из инпута\r\n\r\n    let [totalUsers, setTotalUsers] = useState<number>(0)\r\n    //счетчик срабатывает при нажатии кнопки \"add\"\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => setName(e.target.value)\r\n    // берет значение из инпута и присваевает его в setState\r\n\r\n    const addUser = () => {\r\n        let regExp = (/^\\s+$/).test(name)\r\n        //регулярка ищет совпадения, если от начала до конца одни тодько\r\n        // пробелы, то возвращает true\r\n        if (regExp || !name || !users.every((item: UserType) => item.name !== name)) {\r\n            //если регулярка тру или не name тру или  в массиве уже есть обЪекты с\r\n            // такими же значениями в свойстве name, то состояние error тру и name\r\n            // пустая строка\r\n            setErrorCallBack()\r\n            return setName('')\r\n        }\r\n        addUserCallback({name: name.trim(), _id: v1()})\r\n        //трим обрезает пробелы в начале и в конце\r\n        setName('')\r\n        setTotalUsers(totalUsers = users.length)\r\n    }\r\n    // при нажатии на кнопку, вызывает addUserCallback и отдает ему обЪект user в качестве аргумента,\r\n    //потом обнуляет значение в setName\r\n    //потом тикает счетчик setTotalUsers\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            users={users}\r\n            refreshValueCallBack={refreshValueCallBack}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\n\r\n// Я как обычно до конца не понял что требовалось, по этому теперь эта компонента  копит в стейте введеные значения\r\n// в виде {_id:number, name:string} и не копит если значение в инпуте вводилось ранее, при этом меняет\r\n// значение error=на true, от которого в свою очередь зависит цвет рамки в инпуте\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([{_id: 'null', name: 'null'}])\r\n    // сверху основной стейт с массивом значений из инпута и _id в виде обЪектов\r\n    const [error, setError] = useState<boolean>(false)\r\n    // булевый переключатель стилей рамки  s.error|s.notError\r\n\r\n\r\n    const addUserCallback = (user: UserType) => {\r\n        alert('Hello '+user.name)\r\n        setUsers([...users, user])\r\n\r\n\r\n    }\r\n    // функция проверяет введеное значение с со значениями которые вводились ранее\r\n    // метод every пробегается по массиву и если совпадет хотя бы одно из ранее вводимых значений с введеным\r\n    // только что значением переключает error на true,\r\n    // если значение  ранее не было введено то пушит обЪект user в основной стейт\r\n\r\n    const refreshValueCallBack = () => {\r\n        setError(false)\r\n    }\r\n    //переключает обратно error на false при клике по инпуту\r\n\r\n    const setErrorCallback = () => {\r\n        setError(true)\r\n    }\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users}\r\n                               addUserCallback={addUserCallback}\r\n                               error={error}\r\n                               refreshValueCallBack={refreshValueCallBack}\r\n                               setErrorCallBack={setErrorCallback}/>\r\n\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked&&onChangeChecked(e.currentTarget.checked)\r\n        onChange&&onChange(e)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n\r\n                    className={s.blue}\r\n                    error={error}\r\n                    // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red// пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5-rrd-v6/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n// igg2\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}